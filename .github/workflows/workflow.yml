name: Solar system App

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "feature/*"
jobs:
  unit-testing:
    name: My Unit testing
    strategy:
      matrix:
        node_version: [18, 22]
        operating_system: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout
        uses: actions/checkout/@v4.2.2
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ matrix.node_version }}
      - name: install npm
        run: npm i

      - name: run unit tests
        # id: may-fail
        run: npm test

      - name: using Artifacts
        uses: actions/upload-artifact@v4
        # if: steps.may-fail == 'failure' || steps.may-fail == 'success'
        if: failure() || success()
        with:
          name: moch-test-result
          path: test-results.xml

  code-coverage:
    name: My Code coverage

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout/@v4.2.2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20
      - name: install npm
        run: npm i

      - name: run code coverage
        continue-on-error: true
        run: npm run coverage

      - uses: actions/upload-artifact@v4
        if: failure() || success()
        with:
          name: code-coverage-result
          path: coverage
          retention-days: 5
  docker:
    name: containerization
    needs: [code-coverage, unit-testing]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: docker login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker image Test
        run: |
          docker images
          docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Docker push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
